// File: backend/prisma/schema.prisma
// Version: 1.2.0 (Add password reset fields to User)

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo Business (sin cambios)
model Business {
  id                 String    @id @default(uuid())
  name               String
  slug               String    @unique
  isActive           Boolean   @default(true)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  pointsPerEuro      Float     @default(1.0)
  currency           String    @default("EUR")
  brandingColor      String?
  subscriptionStatus String    @default("trial")
  trialEndsAt        DateTime?
  lastPaymentDate    DateTime?
  users              User[]
  rewards            Reward[]
  qrCodes            QrCode[]

  @@map("businesses")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  password     String
  name         String?
  phone        String?       @unique
  documentId   String?       @unique
  documentType DocumentType?

  role      UserRole
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  businessId String
  business   Business @relation(fields: [businessId], references: [id])

  points         Int     @default(0)
  marketingOptIn Boolean @default(false)

  // --- NUEVO: Campos para Reseteo de Contraseña ---
  resetPasswordToken   String?   @unique // Token único para el reseteo
  resetPasswordExpires DateTime? // Fecha de expiración del token
  // --- FIN NUEVO ---

  @@map("users")
}

// Modelo Reward (sin cambios)
model Reward {
  id          String   @id @default(uuid())
  businessId  String
  business    Business @relation(fields: [businessId], references: [id])
  name        String
  description String?
  pointsCost  Int
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("rewards")
}

// Modelo QrCode (sin cambios)
model QrCode {
  id           String       @id @default(uuid())
  token        String       @unique
  businessId   String
  business     Business     @relation(fields: [businessId], references: [id])
  amount       Float
  ticketNumber String
  status       QrCodeStatus @default(PENDING)
  createdAt    DateTime     @default(now())
  expiresAt    DateTime
  completedAt  DateTime?

  @@map("qr_codes")
}

// Enums (sin cambios)
enum UserRole {
  SUPER_ADMIN
  BUSINESS_ADMIN
  CUSTOMER_FINAL
}

enum QrCodeStatus {
  PENDING
  COMPLETED
  EXPIRED
}

enum DocumentType {
  DNI
  NIE
  PASSPORT
  OTHER
}

// End of File: backend/prisma/schema.prisma
